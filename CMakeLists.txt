cmake_minimum_required(VERSION 3.5.1)
project (pathed)
project (pathed_tests)

# Compiler settings
set (CMAKE_CXX_STANDARD 14)

# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)

# Add the configurations from nanogui
add_subdirectory(ext/nanogui)
include_directories(ext/nanogui/include)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# .h files
include_directories(include)
include_directories(vendor)

# Source files
file(GLOB SOURCES "src/*.cpp")
file(GLOB TESTS "test/*.cpp")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# On top of adding the path to nanogui/include, you may need extras
include_directories(${NANOGUI_EXTRA_INCS})

# Compile a target using NanoGUI
add_executable(pathed app/main.cpp ${SOURCES})
add_executable(pathed_test test/main.cpp ${SOURCES} ${TESTS})

# Lastly, additional libraries may have been built for you.  In addition to linking
# against NanoGUI, we need to link against those as well.
target_link_libraries(pathed nanogui ${NANOGUI_EXTRA_LIBS})
target_link_libraries(pathed_test nanogui ${NANOGUI_EXTRA_LIBS})
